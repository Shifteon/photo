@use '@angular/material' as mat;
// theme
@use './theme/m3-theme.scss';
// mixins
@use './app/nav/nav-theme' as nav;
@use './app/home/home-theme' as home;
@use './app/blog/post/post-theme' as post;
@use './app/gallery/gallery-theme' as gallery;
@use './app/blog/blog/blog-theme' as blog;
@use './app/blog/blog-card/blog-card-theme' as blogCard;
@use './app/collections/collections/collections.theme' as collections;
@use './app/collections/collection/collection.theme' as collection;

@include mat.core();

:root {
  @media (prefers-color-scheme: dark) {
    @include mat.all-component-themes(m3-theme.$dark-theme);
    @include nav.theme(m3-theme.$dark-theme);
    @include home.theme(m3-theme.$dark-theme);
    @include post.theme(m3-theme.$dark-theme);
    @include gallery.theme(m3-theme.$dark-theme);
    @include blog.theme(m3-theme.$dark-theme);
    @include blogCard.theme(m3-theme.$dark-theme);
    @include collections.theme(m3-theme.$dark-theme);
    @include collection.theme(m3-theme.$dark-theme);
    mat-card.card-color {
      background-color: mat.get-theme-color(m3-theme.$dark-theme, surface-container-high);     
    }
    .main-header.filled {
      background-color: mat.get-theme-color(m3-theme.$dark-theme, surface-container);
      color: mat.get-theme-color(m3-theme.$dark-theme, on-surface);
    }
  }
  @media (prefers-color-scheme: light) {
    @include mat.all-component-themes(m3-theme.$light-theme);
    @include nav.theme(m3-theme.$light-theme);
    @include home.theme(m3-theme.$light-theme);
    @include post.theme(m3-theme.$light-theme);
    @include gallery.theme(m3-theme.$light-theme);
    @include blog.theme(m3-theme.$light-theme);
    @include blogCard.theme(m3-theme.$light-theme);
    @include collections.theme(m3-theme.$light-theme);
    @include collection.theme(m3-theme.$light-theme);
    mat-card.card-color {
      background-color: mat.get-theme-color(m3-theme.$light-theme, surface-container-high);
    }
    .main-header.filled {
      background-color: mat.get-theme-color(m3-theme.$light-theme, surface-container);
      color: mat.get-theme-color(m3-theme.$light-theme, on-surface);
    }
  }

  &.purple {
    @media (prefers-color-scheme: dark) {
      @include mat.all-component-themes(m3-theme.$dark-theme-purple);
      @include nav.theme(m3-theme.$dark-theme-purple);
      @include home.theme(m3-theme.$dark-theme-purple);
      @include post.theme(m3-theme.$dark-theme-purple);
      @include gallery.theme(m3-theme.$dark-theme-purple);
      @include blog.theme(m3-theme.$dark-theme-purple);
      @include blogCard.theme(m3-theme.$dark-theme-purple);
      @include collections.theme(m3-theme.$dark-theme-purple);
      @include collection.theme(m3-theme.$dark-theme-purple);
      mat-card.card-color {
        background-color: mat.get-theme-color(m3-theme.$dark-theme-purple, surface-container-high);     
      }
      .main-header.filled {
        background-color: mat.get-theme-color(m3-theme.$dark-theme-purple, surface-container);
        color: mat.get-theme-color(m3-theme.$dark-theme-purple, on-surface);
      }
    }
    @media (prefers-color-scheme: light) {
      @include mat.all-component-themes(m3-theme.$light-theme-purple);
      @include nav.theme(m3-theme.$light-theme-purple);
      @include home.theme(m3-theme.$light-theme-purple);
      @include post.theme(m3-theme.$light-theme-purple);
      @include gallery.theme(m3-theme.$light-theme-purple);
      @include blog.theme(m3-theme.$light-theme-purple);
      @include blogCard.theme(m3-theme.$light-theme-purple);
      @include collections.theme(m3-theme.$light-theme-purple);
      @include collection.theme(m3-theme.$light-theme-purple);
      mat-card.card-color {
        background-color: mat.get-theme-color(m3-theme.$light-theme-purple, surface-container-high);     
      }
      .main-header.filled {
        background-color: mat.get-theme-color(m3-theme.$light-theme-purple, surface-container);
        color: mat.get-theme-color(m3-theme.$light-theme-purple, on-surface);
      }
    }
    body {
      @media (prefers-color-scheme: light) {
        background-color: mat.get-theme-color(m3-theme.$light-theme-purple, surface);
      }
      @media (prefers-color-scheme: dark) {
        background-color: mat.get-theme-color(m3-theme.$dark-theme-purple, surface);
      }
    }
  }
}

html, body { height: 100%; width: 100%; box-sizing: border-box; margin: 0; padding: 0; overflow-x: hidden; }
body { 
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
  @media (prefers-color-scheme: light) {
    background-color: mat.get-theme-color(m3-theme.$light-theme, surface);
  }
  @media (prefers-color-scheme: dark) {
    background-color: mat.get-theme-color(m3-theme.$dark-theme, surface);
  }
}

mat-card {
  &.mat-mdc-card-outlined {
    border-width: 0;
  }
  img {
    width: 100%;
    object-fit: cover;
  }
}

.main-header {
  box-sizing: border-box;
  * {
    box-sizing: border-box;
  }
  border-radius: 25px;
  margin: 10px;
}

.header {
  padding: 3em;
  padding-top: 1em;
  padding-right: 0;
}

.split-header {
  display: grid;
  grid-template-rows: 1fr;
  grid-template-columns: 1fr 1fr;
  padding: 0;
  background-color: transparent;
  height: fit-content;

  .header-section {
    display: grid;
    margin: 10px 5px;
    border-radius: 25px;
    min-height: fit-content;

    &.left {
      grid-column: 1/2;
    }
    &.right {
      grid-column: 2/3;
    }
    &.img {
      img {
        border-radius: 25px;
        grid-row: 1/-1;
        grid-column: 1/-1;
        object-fit: cover;
        width: 100%;
        overflow: hidden;
        max-height: 50vh;
        filter: brightness(100%);
        transition: filter 1s;

        &.transition {
          filter: brightness(5%);
        }
      }
    }

    .heading {
      padding: 20px;
      align-self: center;
      overflow-wrap: break-word;

      h1 {
        font-size: 7em;
        margin: 0;
        line-height: normal;
        &.small-text {
          font-size: 4em;
        }
      }

      p {
        margin-top: 20px;
        margin-left: 15px;
      }

      a {
        margin-left: 20px;
      }
    }
  }

  @media only screen and (max-width: 800px) {
      min-height: 30vh;
      grid-template-columns: 1fr;
      .header-section.right {
        display: none;
      }
      .header-section.left {
        grid-column: 1/-1;
        margin: 0;
      }
      .header-section {
        .heading {
          align-self: center;
          padding: 10px;
          h1 {
            font-size: 5em;
          }
        }
      }
  }

  @media only screen and (max-width: 450px) {
    .header-section {
      .heading {
        h1 {
          font-size: 3em;
        }
      }
    }
  }
}